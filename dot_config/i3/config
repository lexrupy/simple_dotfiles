# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:Agave Nerd Font Mono 12



# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #285577 #ffffff #2e9ef4   #ffffff
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

workspace_auto_back_and_forth no


gaps inner 6
gaps outer 1

default_border pixel 2 
# default_floating_border pixel 2

title_align center


#exec --no-startup-id xrandr --output HDMI-1 --auto --left-of eDP-1
#exec --no-startup-id flameshot
#exec --no-startup-id nitrogen --restore
exec --no-startup-id xscreensaver -no-splash
exec --no-startup-id /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id $HOME/.local/bin/i3-alternating-layout
exec --no-startup-id picom --experimental-backends
exec --no-startup-id feh --bg-fill -z ~/Imagens/wallpapers/*.jpg

# Use exec_always so the script can restart polybar to prevent glitch on system tray
exec_always --no-startup-id ~/.local/bin/launch_polybar for_i3 


#----------------------------------------------------------------------------------------
# Scratchpad Stuff

for_window [class="ScratchPad"] floating enable
for_window [class="ScratchPad"] move position center
for_window [class="ScratchPad"] resize set 1348 729
for_window [class="ScratchPad"] move scratchpad

# exec --no-startup-id alacritty --class ScratchPad 
exec --no-startup-id ~/.local/bin/i3-scratchpad


# PythonPad a scratchpad with python up and running
for_window [class="PythonPad"] floating enable
for_window [class="PythonPad"] move position center
for_window [class="PythonPad"] resize set 1348 729
for_window [class="PythonPad"] move scratchpad

# exec --no-startup-id alacritty --class PythonPad -e ~/.local/opt/PythonPad/bin/ipython
exec --no-startup-id ~/.local/bin/i3-pythonpad


bindsym $mod+shift+minus exec --no-startup-id ~/.local/bin/i3-scratchpad
bindsym $mod+shift+plus exec --no-startup-id ~/.local/bin/i3-pythonpad
# bindsym $mod+shift+minus exec --no-startup-id alacritty --class ScratchPad
# bindsym $mod+shift+plus exec --no-startup-id alacritty --class PythonPad -e ~/.local/opt/PythonPad/bin/ipython

bindsym $mod+minus [class="ScratchPad"] scratchpad show; resize set 1348 729;  move position center
bindsym $mod+plus [class="PythonPad"] scratchpad show; resize set 1348 729;  move position center



# setxkbmap -layout us -variant intl
# setxkbmap -layout br -variant abnt2

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock-fancy --nofork


# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Media volume controls
bindsym XF86AudioRaiseVolume exec amixer -q -D pulse sset Master 5%+ && pkill -RTMIN+10 i3blocks
bindsym XF86AudioLowerVolume exec amixer -q -D pulse sset Master 5%- && pkill -RTMIN+10 i3blocks
bindsym XF86AudioMute exec amixer -q -D pulse sset Master toggle && pkill -RTMIN+10 i3blocks


# Depends on brightnessctl tool (install via apt instal brightnessctl)
bindsym XF86MonBrightnessDown exec brightnessctl s 10%-
bindsym XF86MonBrightnessUp exec brightnessctl s +10%

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
#bindsym $mod+Return exec kitty

#Launch WhatApp Web
bindsym $mod+c exec whatsappweb
# Launch default terminal
bindsym $mod+Return exec alacritty
# Take Screenshot
bindsym Print exec flameshot gui
# Open default internet browser
bindsym $mod+b exec x-www-browser
# bindsym $mod+c exec code
bindsym $mod+t exec alacritty --class PrimaryTerminal; exec alacritty --class SecondaryTerminal; exec x-www-browser; exec dbeaver-ce; exec whatsappweb; exec slack; 
# Display Applications Menu Selector
bindsym $mod+x exec rofi -show power-menu -modi power-menu:rofi-power-menu
# cycle wallpaper
bindsym $mod+Shift+w exec --no-startup-id feh --bg-fill -z ~/Imagens/wallpapers/*.jpg
# kill focused window
bindsym $mod+shift+q kill
# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+d exec --no-startup-id "rofi -modi drun,run -show drun"
# Start Dmenu Launcher
bindsym $mod+p exec --no-startup-id dmenu_run
# Show Cycle Windows Menu with rofi
bindsym $mod+Tab exec --no-startup-id "rofi -modi window -show"
# Lock the screen
bindsym $mod+shift+z exec i3lock-fancy

# Configuration for logout/shutdown menu
mode "exit: [l]ogout, [r]eboot, [s]hutdown loc[k]" {
  bindsym l exec i3-msg exit
  bindsym r exec systemctl reboot
  bindsym s exec systemctl shutdown
  bindsym k exec i3lock-fancy; mode "default"
  bindsym Escape mode "default"
  bindsym Return mode "default"
}
# Launch logout/shutdown menu
bindsym $mod+ctrl+x mode "exit: [l]ogout, [r]eboot, [s]hutdown loc[k]"

# Configuration for Keyboard Cycle Menu
mode "Keyboard Layout: [p]t-br, [u]s, us-[i]ntl" {
  bindsym p exec setxkbmap -layout br; mode "default"
  bindsym u exec setxkbmap -layout us; mode "default"
  bindsym i exec setxkbmap -layout us -variant alt-intl; mode "default"
  bindsym Escape mode "default"
  bindsym Return mode "default"
}
# Launch Keyboard Cycle Menu
bindsym $mod+i mode "Keyboard Layout: [p]t-br, [u]s, us-[i]ntl"

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop
 
focus_follows_mouse no

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+ctrl+l split h

# split in vertical orientation
# bindsym $mod+ctrl+j split v

# toggle split orientation
bindsym $mod+ctrl+j split t

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:code"
set $ws2 "2:term"
set $ws3 "3:www"
set $ws4 "4:db"
set $ws5 "5:chat1"
set $ws6 "6:chat2"
set $ws7 "7:docs"
set $ws8 "8:dsk"
set $ws9 "9:dsk1"
set $ws10 "10:dsk2"

workspace $ws1 output nonprimary
workspace $ws2 output nonprimary 
workspace $ws3 output nonprimary 
workspace $ws4 output nonprimary

workspace $ws5 output primary
workspace $ws6 output primary

workspace $ws7 output primary nonprimary 
workspace $ws8 output primary nonprimary 
workspace $ws9 output primary nonprimary 
workspace $ws10 output primary nonprimary


# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10; workspace $ws10

# Change current workspace to left monitor
bindsym $mod+Mod1+ctrl+h move workspace to output left
# Change current workspace to right monitor
bindsym $mod+Mod1+ctrl+l move workspace to output right

# Individual program output configuration

assign [class="Code"] $ws1
assign [class="Java"] $ws4
assign [class="DBeaver"] $ws4
assign [class="Google-chrome"] $ws3
assign [class="Navigator"] $ws3
assign [class="Slack"] $ws6
for_window [title="WhatsApp Web"] move container to workspace $ws5; workspace $ws5
# for_window [title="Google Chrome"] move container to workspace $ws3; workspace $ws3
for_window [class="Google-chrome" window_role="pop-up"] floating enable, resize set 1200 800, move position center, border normal
# Complementary Window Configuration
for_window [class="PrimaryTerminal"] move container to workspace $ws1
for_window [class="SecondaryTerminal"] move container to workspace $ws2
# for_window [class="ScratchPad"] floating enable
# for_window [class="ScratchPad"] move scratchpad
for_window [class="Pythontkfloating"] floating enable
for_window [class="Yad" title="yad-calendar"] floating enable, move position mouse, move down 25 px
for_window [class="Gitk"] floating enable, move position center
for_window [window_type="splash"] floating enable, move position center
# for_window [title=".*backend.*"] move container to workspace $ws8
for_window [class="Blueman-manager"] floating enable, move position center, resize set 640 440, border normal
for_window [class="Pavucontrol"] floating enable, move position center, resize 1080 720, border normal
for_window [class="ksshaskpass"] floating enable, move position center

# Kill the window when middle click on title border
bindsym --release --border button2 kill

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Encerrar sessão?' -B 'Sim, encerrar i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt
        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"



bindsym --release Caps_Lock exec pkill -SIGRTMIN+11 i3blocks
#bindsym --release Num_Lock  exec pkill -SIGRTMIN+11 i3blocks

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#        #status_command i3status
#        status_command i3blocks -c ~/.config/i3/blocks_config
#        position top
#        # output primary
#        # workspace_command ~/.local/bin/i3-workspaces
#        strip_workspace_numbers yes
#
# }

# Go to workspace 1
exec i3-msg workspace $ws1
