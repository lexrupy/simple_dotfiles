# Coloring Git Branch and RVM ruby current Version
#--
# Colors
C_RED="\033[01;31m"
C_GREEN="\033[0;32m"
C_YELLOW="\033[01;33m"
C_BLUE="\033[01;34m"
C_MAGENTA="\033[0;35m"
C_CYAN="\033[01;36m"
C_WHITE="\033[0;37m"
C_RESET="\033[00m"

function _git_ps1 {
  git_branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
  git_changes=$(git status --porcelain 2> /dev/null | wc -l)
  branch_icon=""
  dirty_icon=" ±"
  clean_icon=" 󰸞"
  state_str=""
  state_color=$C_GREEN
  if [[ "$git_changes" -eq 0 ]]; then
      state_str="$clean_icon"
  else
      state_color=$C_RED
      state_str="$dirty_icon $git_changes"
  fi
  [[ -n "$git_branch" ]] && echo -e " $branch_icon $git_branch$state_color$state_str"
}

function _venv_ps1 {
    # Get Virtual Env
    if [[ -n "$VIRTUAL_ENV" ]]; then

      ver="$(pyenv version-name)"
      if [[ $ver == "system" ]]; then
        ver=$(python3 -V 2>&1 | grep -Po '(?<=Python )(.+)')
        ver="   $ver"
      else
        ver="  $ver"
      fi
        # Strip out the path and just leave the env name
        venv="${VIRTUAL_ENV##*/}"
    else
        # In case you don't have one activated
        venv=''
    fi
    if [[ $venv == ".venv" ]]; then
      venv="$(basename $PWD)"
    fi
    [[ -n "$venv" ]] && echo -e "$ver 󰉀 $venv"
}


PS1="\[$C_CYAN\]\$(date +%H:%M) \[$C_GREEN\]\[\w\]\[$C_MAGENTA\]\$(_venv_ps1)\[$C_YELLOW\]\$(_git_ps1)\[$C_RESET\]\n\[$C_RED\]>\[$C_RESET\] "
